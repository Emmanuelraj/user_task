
command : mvn clean install

features 
             : one to many mapping spring-data-jpa
pattern-api  : mvc & used rest controller (rest-api)
    view     : jstl+jsp+bootstrap3
    tools    : spring boot+hsqldb(external)+postman+maven
   mechanism : Join
 sql-location:  src/main/resources/schema.sql (attached)
 
 
 
URI	Method	Action: (id autogenerated no need to add)

localhost:3000/user-task/all	          GET	    Listing, display all users
localhost:3000/user-task/save	          POST	    User should be able to add tasks Save  (use postman)
localhost:3000/user-task/viewById/{id}    GET	    User should be able to track his/her task user {id}
localhost:3000/user-task/edit/{id}	      PUT	    Display update user form for {id} (use postman)
localhost:3000/user-task/deleteById/{id}  GET       Delete user specified{id} 
 

//use postman to save
sample input : localhost:3000/user-task/save          o/p msg: record saved
{ 

	"username":"imman",
	"tasksList":[{

		"taskDesc":"taskdesc1",
		 "taskName":"task1",
		"taskStatus":"done"
		
	}]	
}


//  use postman to edit
sample input : localhost:3000/user-task/edit/{}       ---> o/p msg: record UpdateById
{ 
  
	"username":"imman",
	
	"tasksList":[{
      
		"taskDesc":"taskdesc1",
		 "taskName":"task1",
		"taskStatus":"not done"   //edit status
	
	}]	
}

//to check updated record or not              localhost:3000/user-task/all
 
 
 
 

